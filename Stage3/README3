# Hospital Management System - SQL Procedures and Functions

This README provides an overview of the SQL procedures and functions implemented for a Hospital Management System. Each component is described, along with its code and proof of execution.

## 1. get_total_billed

### Description
This function calculates the total amount billed for a specific patient.

### Code
[Code from get_total_billed.sql]

### Proof of Execution
To prove this function works:
1. Execute the function for a patient ID.
2. Show the returned total billed amount.
3. Cross-check with the sum of all billing records for that patient in the Billing table.

## 2. calculate_patient_age

### Description
This function calculates a patient's age based on their date of birth.

### Code
[Code from calculate_patient_age.sql]

### Proof of Execution
To prove this function works:
1. Execute the function for a patient ID.
2. Show the returned age.
3. Cross-check with the patient's date of birth in the Patients table.

## 3. main_update_record_and_bill

### Description
This procedure updates a patient's medical record and retrieves their total billed amount.

### Code
[Code from main2.sql]

### Proof of Execution
To prove this procedure works:
1. Execute the procedure with sample patient data.
2. Show the output message with the updated total billed amount.
3. Verify that the MedicalRecord table has been updated with the new information.

## 4. main_schedule_and_age

### Description
This procedure schedules an appointment for a patient and calculates their age.

### Code
[Code from main1.sql]

### Proof of Execution
To prove this procedure works:
1. Execute the procedure with sample appointment data.
2. Show the output message confirming the appointment and displaying the patient's age.
3. Verify that a new record has been added to the Appointment table.

## 5. schedule_appointment

### Description
This procedure schedules an appointment and updates the doctor-patient relationship if necessary.

### Code
[Code from schedule_appointment.sql]

### Proof of Execution
To prove this procedure works:
1. Execute the procedure with sample appointment data.
2. Show the output message confirming the appointment has been scheduled.
3. Verify that a new record has been added to the Appointment table.
4. Check if the DocPat table has been updated with the new doctor-patient relationship (if it didn't exist before).

## 6. update_medical_record

### Description
This procedure updates or creates a medical record for a patient.

### Code
[Code provided in the conversation]

### Proof of Execution
To prove this procedure works:
1. Execute the procedure with sample medical record data.
2. Show the output message indicating whether a new record was created or an existing one was updated.
3. Verify that the MedicalRecord table has been updated with the new information.

For each of these components, include screenshots or database query results to demonstrate their successful execution and the resulting changes in the database.
